CREATE TABLE dean
(
    oid         INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    first_name  VARCHAR(255),
    last_name   VARCHAR(255),
    patronymic  VARCHAR(255),
    faculty_oid INTEGER,
    CONSTRAINT pk_dean PRIMARY KEY (oid)
);

CREATE TABLE dean_courses
(
    course_id INTEGER NOT NULL,
    dean_id   INTEGER NOT NULL
);

CREATE TABLE course
(
    oid            INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    course_code    VARCHAR(255),
    course_name    VARCHAR(255),
    department_oid INTEGER,
    course_active  SMALLINT,
    CONSTRAINT pk_course PRIMARY KEY (oid)
);

CREATE TABLE department
(
    oid        INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    short_name VARCHAR(255),
    name       VARCHAR(255),
    faculty_id INTEGER,
    CONSTRAINT pk_department PRIMARY KEY (oid)
);

CREATE TABLE department_course
(
    course_id     INTEGER NOT NULL,
    department_id INTEGER NOT NULL
);

CREATE TABLE expertise
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name       VARCHAR(255),
    short_name VARCHAR(255),
    CONSTRAINT pk_expertise PRIMARY KEY (id)
);

CREATE TABLE faculty
(
    oid        INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name       VARCHAR(255),
    short_name VARCHAR(255),
    dean_oid   INTEGER,
    CONSTRAINT pk_faculty PRIMARY KEY (oid)
);

CREATE TABLE professor
(
    oid                    INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name                   VARCHAR(255),
    phone                  VARCHAR(255),
    enable_notify_by_phone BOOLEAN,
    email                  VARCHAR(255),
    enable_notify_by_mail  BOOLEAN,
    department_oid         INTEGER,
    expertise_id           BIGINT,
    CONSTRAINT pk_professor PRIMARY KEY (oid)
);

CREATE TABLE professor_courses
(
    course_id    INTEGER NOT NULL,
    professor_id INTEGER NOT NULL
);

ALTER TABLE professor
    ADD CONSTRAINT FK_PROFESSOR_ON_DEPARTMENT_OID FOREIGN KEY (department_oid) REFERENCES department (oid);

ALTER TABLE professor
    ADD CONSTRAINT FK_PROFESSOR_ON_EXPERTISE FOREIGN KEY (expertise_id) REFERENCES expertise (id);

ALTER TABLE professor_courses
    ADD CONSTRAINT fk_procou_on_course FOREIGN KEY (course_id) REFERENCES course (oid);

ALTER TABLE professor_courses
    ADD CONSTRAINT fk_procou_on_professor FOREIGN KEY (professor_id) REFERENCES professor (oid);

ALTER TABLE faculty
    ADD CONSTRAINT FK_FACULTY_ON_DEAN_OID FOREIGN KEY (dean_oid) REFERENCES dean (oid);

ALTER TABLE department
    ADD CONSTRAINT uc_department_name UNIQUE (name);

ALTER TABLE department
    ADD CONSTRAINT uc_department_shortname UNIQUE (short_name);

ALTER TABLE department
    ADD CONSTRAINT FK_DEPARTMENT_ON_FACULTY FOREIGN KEY (faculty_id) REFERENCES faculty (oid);

ALTER TABLE department_course
    ADD CONSTRAINT fk_depcou_on_course FOREIGN KEY (course_id) REFERENCES course (oid);

ALTER TABLE department_course
    ADD CONSTRAINT fk_depcou_on_department FOREIGN KEY (department_id) REFERENCES department (oid);

ALTER TABLE dean
    ADD CONSTRAINT FK_DEAN_ON_FACULTY_OID FOREIGN KEY (faculty_oid) REFERENCES faculty (oid);

ALTER TABLE dean_courses
    ADD CONSTRAINT fk_deacou_on_course FOREIGN KEY (course_id) REFERENCES course (oid);

ALTER TABLE dean_courses
    ADD CONSTRAINT fk_deacou_on_dean FOREIGN KEY (dean_id) REFERENCES dean (oid);

ALTER TABLE course
    ADD CONSTRAINT uc_course_coursecode UNIQUE (course_code);

ALTER TABLE course
    ADD CONSTRAINT FK_COURSE_ON_DEPARTMENT_OID FOREIGN KEY (department_oid) REFERENCES department (oid);